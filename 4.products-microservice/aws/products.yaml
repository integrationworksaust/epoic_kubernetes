apiVersion: apps/v1
kind: Deployment
metadata:
  name: products
spec:
  selector:
    matchLabels:
      app: products
  replicas: 2
  template: # template for the pods
    metadata:
      labels:
        app: products
        version: v1
    spec:
      containers:
      - name: products
        image: dzdunca/products:v1.0.0
        env: 
        - name: POSTGRES_SERVER_HOSTNAME
          valueFrom:
            configMapKeyRef:
              name: configmaps-postgres-products-config
              key: postgres_hostname
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: configmaps-postgres-products-config
              key: postgres_db
        - name: POSTGRES_SCHEMA
          valueFrom:
            configMapKeyRef:
              name: configmaps-postgres-products-config
              key: postgres_schema
        - name: SERVER_PORT
          valueFrom:
            configMapKeyRef:
              name: configmaps-products
              key: products_server_port
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: secret-products-postgres
              key: postgres_user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: secret-products-postgres
              key: postgres_password
        ports:
        - containerPort: 8081

---

apiVersion: v1
kind: Service
metadata:
  name: epoic-products
spec:
  # This defines which pods are going to represented by thie Service
  # This service becomes a network endpoint for either other services
  # or maybe external users to connect to (eg browser)
  selector:
     app: products
  ports:
    - name: app
      port: 8081
      targetPort: 8081   
  type: ClusterIP
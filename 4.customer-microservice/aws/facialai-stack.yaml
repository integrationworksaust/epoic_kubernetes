apiVersion: apps/v1
kind: Deployment
metadata:
  name: facial-ai
spec:
  selector:
    matchLabels:
      app: facial-ai
  replicas: 1
  template: # template for the pods
    metadata:
      labels:
        app: facial-ai
        version: safe
    spec:
      containers:
      - name: facial-ai
        image: dzdunca/facialai-service:v1.0.0
        env: 
        - name: COUCHBASE_SERVER_HOSTNAME
          valueFrom:
            configMapKeyRef:
              name: configmaps-facial-ai
              key: couchbase.server.hostname 
        - name: COUCHBASE_SERVER_BUCKETNAME
          valueFrom:
            configMapKeyRef:
              name: configmaps-facial-ai
              key: couchbase.server.bucketname_images             
        - name: COUCHBASE_SERVER_BUCKETPASSWORD
          valueFrom:
            secretKeyRef:
              name: secret-facialai-couchbase
              key: couchbase_bucketpassword_images   
        - name: BMI_API_URL
          valueFrom:
            configMapKeyRef:
              name: configmaps-facial-ai
              key: bmi.apiurl      	  
        ports:
        - containerPort: 8081

---

apiVersion: v1
kind: Service
metadata:
  name: runkicker-facial-ai
spec:
  # This defines which pods are going to represented by thie Service
  # This service becomes a network endpoint for either other services
  # or maybe external users to connect to (eg browser)
  selector:
     app: facial-ai
  ports:
    - name: app
      port: 8081
      targetPort: 8081    
  type: ClusterIP
